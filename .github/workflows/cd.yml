name: Multi-Cloud Continuous Deployment

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Set up R
      uses: r-lib/actions/setup-r@v2
      with:
        r-version: '4.1'

    - name: Install Python Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r deployment/api/requirements.txt

    - name: Install R Dependencies
      run: |
        Rscript -e 'install.packages(c("plumber", "futile.logger"))'
        Rscript -e 'source("deployment/api/packages.R")'

    - name: Build Docker Image
      run: |
        docker build -t anomaly-detection:latest -f deployment/docker/Dockerfile .

    - name: Push Docker Image to AWS ECR
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_DEFAULT_REGION: 'us-west-2'
      run: |
        aws ecr get-login-password --region us-west-2 | docker login --username AWS --password-stdin ${{ secrets.AWS_ECR_URL }}
        docker tag anomaly-detection:latest ${{ secrets.AWS_ECR_URL }}/anomaly-detection:latest
        docker push ${{ secrets.AWS_ECR_URL }}/anomaly-detection:latest

    - name: Push Docker Image to GCP GCR
      run: |
        echo "${{ secrets.GCP_SERVICE_ACCOUNT }}" | base64 --decode > ${HOME}/gcp-key.json
        gcloud auth activate-service-account --key-file=${HOME}/gcp-key.json
        gcloud auth configure-docker
        docker tag anomaly-detection:latest gcr.io/${{ secrets.GCP_PROJECT_ID }}/anomaly-detection:latest
        docker push gcr.io/${{ secrets.GCP_PROJECT_ID }}/anomaly-detection:latest

    - name: Deploy to AWS
      run: |
        python deployment/scripts/deploy_aws.py
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_DEFAULT_REGION: 'us-west-2'

    - name: Deploy to GCP
      run: |
        python deployment/scripts/deploy_gcp.py
      env:
        GOOGLE_APPLICATION_CREDENTIALS: ${HOME}/gcp-key.json

    - name: Notify Success
      uses: slackapi/slack-github-action@v1.20.0
      with:
        slack-message: 'Deployment to both AWS and GCP was successful!'
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}